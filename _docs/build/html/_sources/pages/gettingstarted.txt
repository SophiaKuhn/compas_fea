.. _gettingstarted:

********************************************************************************
Getting started
********************************************************************************

The following instructions describe the prerequisites for using the compas_fea package.

.. contents::

=====================
FE software
=====================

Abaqus
******

Most support with the compas_fea package is for the finite element software Abaqus by Simulia, version 6.14 onward. As this software is generally used by academia, licensing is usually through the form of a university network academic license, or a lighter student license. Note that a student license may contain a restriction on the number of nodes that the model may contain, and so heavy models with many shell or solid elements may surpass this limit and not execute. Abaqus may be installed as per the installation instructions for your version, with the Abaqus documentation not needed for the package to run. the Abaqus executable is run in the background as a subprocess to solve a model, licenses that require the computer to be connected to the network, may require the host to be connected through a Virtual Private Network (VPN) such as Cisco AnyConnect.

On installation, Abaqus requires a temporary directory to be nominated, for saving many different files during analysis, including the most important ``.odb`` file. Generally this folder will be ``C:/Temp/`` on Windows or ``~/Temp`` on Linux, but a different folder location may be defined at the start of any compas_fea script. Abaqus will also register its core executables to the PATH for Windows systems, which can be confirmed with typing ``abaqus cae`` in a ``cmd`` terminal, and is required for Windows users of the package. Linux users may wish to define similar aliases manually with

``alias abaqus_cae="XLIB_SKIP_ARGB_VISUALS=1 /path/to/abaqus/Commands/abaqus cae -mesa"``
``alias abaqus="/path/to/abaqus/Commands/abaqus"``

in their ``.bashrc`` file. There is no support for Abaqus with Mac OS, Mac users will need to use a Virtual Machine such as Parallels, VirtualBox and VMWare Workstation and use a Windows or Linux Abaqus installation.

Ansys
*****

Opensource
**********

Support for opensource finite element libraries is currently in developement.


======
Python
======

As the compas_fea package uses the core compas framework for a variety of datastructure, visualisation and geometric tasks,
the compas core library must be on the ``PYTHONPATH``. This can be set in Windows under Environment Variables in Advanced System
Settings, and on Linux with the following additions to the ``.bashrc`` file:

``PYTHONPATH="${PYTHONPATH}:/path/to/compas_framework/src/"``
``export PYTHONPATH``

The compas_fea package is compatible with Python versions 2.x and 3.x, and although the target finite element software may utilise one
version or the other for their API, the input files that are needed to run the model through this software, are generated separate from this.

A number of Python dependencies exists in order to use the compas_fea package, either as an optional or a required module/package, and these are listed below. A Python distribution such as Anaconda 2 or 3, will generally cover all of the required module/packages and most of the optional ones. For a standalone CPython installation, additional modules and packages are recommended to be installed via ``pip``.

Required modules
****************

* **NumPy**: needed for efficient post-processing of output data.
* **SciPy**: used for various 4D visualisation functions and post-processing sparse arrays.

Optional modules
****************

* **mayavi**: utilised for standalone voxel plotting of solid elements.
* **PyOpenGL**: a Python OpenGL requirement for the core compas Viewer.
* **PySide/Pyside2**: for the base visualisation App for displaying the model and results.


============
CAD software
============

The compas_fea package does not need CAD software to be installed to function, but it is very useful for both generating and inserting geometry into the Structure class and for efficiently visualising results, either as one analysis of a structural model, or as part of a parametric analysis with many cycles or analyses. In general, the only difference in using a specific type of CAD software, is the manner in which geometric information is taken from the CAD environment (e.g. through layers or objects) and the way that output data is then re-plotted on this geometry. There is no variance in how loads, materials, boundary conditions etc are applied, as this is based on adding classes to the Structure through scripting.

Rhinoceros
**********

Support for Rhinoceros is based on version 5.0, for which Python 2.7.x (IronPython) is standard. Please see the installation and setup instructions for using Rhinoceros with the core compas library, as the only addition for compas_fea compatability is to include the compas_fea package in the ``PYTHONPATH``.

Blender
*******

Support for Blender is based on version 2.76, for which Python 3.5 (CPython) is standard. The compas_fea package must again be on the ``PYTHONPATH`` to work.
